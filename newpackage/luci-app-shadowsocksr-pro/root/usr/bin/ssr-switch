#!/bin/sh  /etc/rc.common
#
# Copyright (C) 2017 openwrt-ssr
# Copyright (C) 2017 yushi studio <ywb94@qq.com>
#
# This is free software, licensed under the GNU General Public License v3.
# See /LICENSE for more information.
#

delay_time=60  #second
check_timeout=3  #second
normal_flag=0
server_locate=0
server_count=0
NAME=shadowsocksr
ENABLE_SERVER=nil
CONFIG_SWTICH_FILE=/var/etc/${NAME}_t.json
LOGFILE=/tmp/ssr-switch.log


[ -n "$1" ] && delay_time=$1
[ -n "$2" ] && check_timeout=$2

uci_get_by_name() {
	local ret=$(uci get $NAME.$1.$2 2>/dev/null)
	echo ${ret:=$3}
}

uci_get_by_type() {
	local ret=$(uci get $NAME.@$1[0].$2 2>/dev/null)
	echo ${ret:=$3}
}

DEFAULT_SERVER=$(uci_get_by_type $NAME global_server)
CURRENT_SERVER=$DEFAULT_SERVER

check_proxy() {
	/usr/bin/nc -z -w $check_timeout www.google.com 80
	#/usr/bin/ssr-check www.google.com 80 $check_timeout 1
	if [ "$?" == "0" ]; then
		return 0
  	else
		/usr/bin/nc -z -w $check_timeout www.baidu.com 80
		#/usr/bin/ssr-check www.baidu.com 80 $check_timeout 1
		if [ "$?" == "0" ]; then
			#echo "server error" 
	  		return 1
		else
			#echo "network error"
	  		return 2
		fi
	fi
}

test_proxy() {  
	local servername=$(uci_get_by_name $1 server)
	local serverport=$(uci_get_by_name $1 server_port)
	ret=$(ping -c 3 $servername  | grep 'loss' | awk -F ',' '{ print $3 }' | awk -F "%" '{ print $1 }') 
	[ -z "$ret"  ] && return 1
	[ "$ret" -gt "50" ] && return 1
	# ipset add ss_spec_wan_ac $servername 2>/dev/null
	# ret=$?
	/usr/bin/nc -z -w $check_timeout $servername $serverport
	#/usr/bin/ssr-check $servername $serverport $check_timeout
	local ret2=$?
	# if [ "$ret" = "0" ] ;then
	# 	ipset del ss_spec_wan_ac $servername 2>/dev/null
	# fi
	if [ "$ret2" = "0" ] ;then
		return 0 #server ok
	else
		return 1 #server error
	fi
}

search_proxy() {
	let server_count=server_count+1
	# EXP1 = "1"  and EXP2
	[ "$normal_flag" = "1" -a "$server_count" -le "$server_locate" ] && return 0
	[ "$(uci_get_by_name $1 switch_enable)" != "1"  ]  && return 1
	[ $ENABLE_SERVER != nil ] && return 0
	[ "$1" = "$CURRENT_SERVER" ] && return 0
	local servername=$(uci_get_by_name $1 server)
	local serverport=$(uci_get_by_name $1 server_port)
	# ipset add ss_spec_wan_ac $servername 2>/dev/null
	# ret=$?
	/usr/bin/nc -z -w $check_timeout $servername $serverport
	#/usr/bin/ssr-check $servername $serverport $check_timeout
	local ret2=$?
	# if [ "$ret" = "0" ] ;then
	# 	ipset del ss_spec_wan_ac $servername 2>/dev/null
	# fi
	if [ "$ret2" = "0" ] ;then
		server_locate=$server_count
		ENABLE_SERVER=$1
		return 0
	else
		return 1
	fi
}

select_proxy() {
	config_load $NAME
	ENABLE_SERVER=nil
	mkdir -p /var/run /var/etc
	server_count=0
	config_foreach search_proxy servers
}

switch_proxy() {
	/etc/init.d/ssrpro restart $1
	return 0
}

start() {
	while [ "1" = "1" ]  #loop
	do
		sleep $delay_time
		LOGTIME=$(date "+%Y-%m-%d %H:%M:%S")
		echo "[$LOGTIME] check server every $delay_time seconds." >> $LOGFILE
		#check if current server is default server
		if [ "$CURRENT_SERVER" != "$DEFAULT_SERVER" ] ;then
		#echo "not default proxy"
  		#check default is ok
			if test_proxy $DEFAULT_SERVER ;then
				#echo "switch to default proxy"
				#default server is ok ,switch back
				CURRENT_SERVER=$DEFAULT_SERVER
				switch_proxy $CURRENT_SERVER 
				echo "[$LOGTIME] default server [$(uci_get_by_name $CURRENT_SERVER alias)] is up ,switch to default." >> $LOGFILE
				logger -t "$NAME" "switch to default ["$(uci_get_by_name $CURRENT_SERVER alias)"] proxy!"
				continue
			fi
		fi
  
	#check current proxy
	check_proxy  
	current_ret=$?
	
	if [ "$current_ret" = "1" ] ;then
		#echo "current error"
		echo "[$LOGTIME] current server [$(uci_get_by_name $CURRENT_SERVER alias)] is down." >> $LOGFILE
	 	select_proxy
		if [ "$ENABLE_SERVER" != nil ] ;then
			#echo $(uci_get_by_name $new_proxy server)
			CURRENT_SERVER=$ENABLE_SERVER
			switch_proxy $CURRENT_SERVER
			echo "[$LOGTIME] switch to [$(uci_get_by_name $CURRENT_SERVER alias)]." >> $LOGFILE
			normal_flag=1
			logger -t "$NAME" "switch proxy ["$(uci_get_by_name $CURRENT_SERVER alias)"] success!"
			#echo "switch ok"
		else
			normal_flag=0 
		fi
	else
		normal_flag=0   
		fi
	done
}
