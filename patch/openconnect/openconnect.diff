diff --git a/net/openconnect/files/openconnect.sh b/net/openconnect/files/openconnect.sh
index 2610194..7338e2e 100755
--- a/net/openconnect/files/openconnect.sh
+++ b/net/openconnect/files/openconnect.sh
@@ -48,25 +48,21 @@
 		umask 077
 		pwfile="/var/run/openconnect-$config.passwd"
 		echo "$password" > "$pwfile"
-		append cmdline "--passwd-on-stdin"
+		append cmdline "--passwd-file=$pwfile"
 	}
 
 	proto_export INTERFACE="$config"
 	logger -t openconnect "executing 'openconnect $cmdline'"
 
-	if [ -f "$pwfile" ];then
-		proto_run_command "$config" /usr/sbin/openconnect $cmdline <$pwfile
-	else
-		proto_run_command "$config" /usr/sbin/openconnect $cmdline
-	fi
+	proto_run_command "$config" /usr/sbin/openconnect $cmdline
 }
 
 proto_openconnect_teardown() {
-	pwfile="/var/run/openconnect-$config.passwd"
+	pwfile="/var/run/openconnect-$1.passwd"
 
 	rm -f $pwfile
 	logger -t openconnect "bringing down openconnect"
-	proto_kill_command "$config"
+	proto_kill_command "$1"
 }
 
 add_protocol openconnect
diff --git a/net/openconnect/Makefile b/net/openconnect/Makefile
--- a/net/openconnect/Makefile
+++ b/net/openconnect/Makefile
@@ -8,12 +8,12 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=openconnect
-PKG_VERSION:=5.03
+PKG_VERSION:=5.99
 PKG_RELEASE:=1
 
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.gz
 PKG_SOURCE_URL:=ftp://ftp.infradead.org/pub/openconnect/
-PKG_MD5SUM:=ff43ed1dbaccd2537fd7c5bfb04295a6
+PKG_MD5SUM:=9131734de36f28860889ac063b519372
 
 include $(INCLUDE_DIR)/package.mk
 
diff --git a/net/openconnect/patches/100-passwd_file.patch b/net/openconnect/patches/100-passwd_file.patch
new file mode 100644
index 0000000..827ebb9
--- /dev/null
+++ b/net/openconnect/patches/100-passwd_file.patch
@@ -0,0 +1,73 @@
+diff -uNr orig/main.c new/main.c
+--- orig/main.c	2014-02-18 11:17:30.000000000 -0500
++++ new/main.c	2014-05-27 17:18:48.000000000 -0400
+@@ -146,6 +146,7 @@
+ 	OPT_NO_XMLPOST,
+ 	OPT_PIDFILE,
+ 	OPT_PASSWORD_ON_STDIN,
++	OPT_PASSWORD_FILE,
+ 	OPT_PRINTCOOKIE,
+ 	OPT_RECONNECT_TIMEOUT,
+ 	OPT_SERVERCERT,
+@@ -211,6 +212,7 @@
+ 	OPTION("xmlconfig", 1, 'x'),
+ 	OPTION("cookie-on-stdin", 0, OPT_COOKIE_ON_STDIN),
+ 	OPTION("passwd-on-stdin", 0, OPT_PASSWORD_ON_STDIN),
++ 	OPTION("passwd-file", 1, OPT_PASSWORD_FILE),
+ 	OPTION("no-passwd", 0, OPT_NO_PASSWD),
+ 	OPTION("reconnect-timeout", 1, OPT_RECONNECT_TIMEOUT),
+ 	OPTION("dtls-ciphers", 1, OPT_DTLS_CIPHERS),
+@@ -384,6 +386,7 @@
+ 	printf("      --no-xmlpost                %s\n", _("Do not attempt XML POST authentication"));
+ 	printf("      --non-inter                 %s\n", _("Do not expect user input; exit if it is required"));
+ 	printf("      --passwd-on-stdin           %s\n", _("Read password from standard input"));
++	printf("      --passwd-file=FILE          %s\n", _("Read password from a file"));
+ 	printf("      --token-mode=MODE           %s\n", _("Software token type: rsa, totp or hotp"));
+ 	printf("      --token-secret=STRING       %s\n", _("Software token secret"));
+ #ifndef HAVE_LIBSTOKEN
+@@ -442,6 +445,35 @@
+ 		*c = 0;
+ }
+ 
++static void read_file(const char *filename, char **string)
++{
++	char *c = malloc(1025), *ret;
++
++	if (!c) {
++		fprintf(stderr, _("Allocation failure for string from %s\n"), filename);
++		exit(1);
++	}
++
++    FILE *f = fopen(filename, "r");
++
++    if (!f) {
++        fprintf(stderr, _("Failed to open file %s\n"), filename);
++    }
++
++    ret = fgets(c, 1025, f);
++
++	if (!ret) {
++		perror(_("fgets"));
++		exit(1);
++	}
++
++	*string = c;
++
++	c = strchr(*string, '\n');
++	if (c)
++		*c = 0;
++}
++
+ static int sig_cmd_fd;
+ #ifndef _WIN32
+ static int sig_caught;
+@@ -701,6 +733,9 @@
+ 		case OPT_PASSWORD_ON_STDIN:
+ 			read_stdin(&password, 0);
+ 			break;
++		case OPT_PASSWORD_FILE:
++			read_file(optarg, &password);
++			break;
+ 		case OPT_NO_PASSWD:
+ 			vpninfo->nopasswd = 1;
+ 			break;
